/*
	THIS IS AN AUTOMATICALLY GENERATED FILE

	If you edit this file, your changes may be lost later.
*/
#include <config.h>
#include "externs.h"
STRLIST *strgetnode(char *str, STRLIST *head, int caseindep);
STRLIST *strmakenode(int size);
char *ampm(time_t secs, int style);
char *findspace(char *s);
char *getloginid(void);
char *getrcname(void);
char *getword(char *s);
char *histget(void);
char *idlestr(char *num);
char *nextword(char *s);
char *response(char *num);
#if 0
char *strscat(...);
#endif
char *tildexpand(char *s);
int addusage(char *name, int type, char *args, char *usage);
RETSIGTYPE askquit();
int beep(char *pkt);
int bufferadd(char *text);
int bufferlist(int lines);
int c_help(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_hush(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_log(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_quit(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_rand(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_replay(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_shell(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_time(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int c_usage(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
char *catargs(char **argv);
int cimatch(char *s1, char *s2);
int clearargs(int argc, char *argv[]);
int closesessionlog(void);
int cmdoutmsg(char *pkt);
int copenmsg(char *pkt);
int cpersonalmsg(char *pkt);
int csendopen(char *txt);
int deleteusage(char *name);
int dispatch(char *pkt);
int errormsg(char *pkt);
int exitmsg(void);
int filtergroupname(char *txt);
int filternickname(char *txt);
int filtertext(char *s);
int fnexit(void);
int fnterm(void);
int oset(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
char *getline(char *prompt, int expand);
int getterm(void);
int getwinsize(void);
int gunlink(USAGE *u, USAGE **first, USAGE **last);
int helpme(char *subject);
int helptoc(void);
int histcount(void);
int histput(char *nick);
int hushadd(Tcl_Interp *interp, char *nick);
int hushdelete(Tcl_Interp *interp, char *nick);
int hushlist(void);
int importantmsg(char *pkt);
int inserttab(void);
int ishushed(char *nick);
int lcaseit(char *s);
int linebuffer(FILE *fp);
int listusage(char *name);
int listvars(char *name);
int logging(void);
int loginokmsg(char *pkt);
int main(int argc, char **argv);
int mbreakprint(int per, char *from, char *s);
int mprint(int per, char *from, char *s,int show);
int numeric(char *txt);
int parse(char *s);
int pauseprompt(char *prompt, int erase, int c, int unget, char *except);
int printcutetime(void);
int printmilitarytime(void);
int printnormaltime(void);
int printvar(char *name, int type, char *address);
int protomsg(char *pkt);
int pushback(int c);
int putl(char *s, int flags);
int quoteify(char *a, char *b);
int restoreterm(void);
int restrict(void);
int s_admin(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_beep(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_group(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_personal(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_send(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_user(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_version(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int s_who(char *clientData, Tcl_Interp *interp, int argc, char *argv[]);
int saysomething(void);
int sendcmd(char *cmd, char *args);
int sendlogin(char *id, char *nick, char *group, char *command, char *passwd);
int sendpersonal(char *nick, char *text, int echoflag);
int sendpong(void);
int setvar(Tcl_Interp *interp, int type, char *address, char *s);
int specialchar(register int c, char *s, char *prompt, int expand);
int split(char *s);
int startsessionlog(Tcl_Interp *interp, char *path);
int statusmsg(char *pkt);
#ifndef HAVE_STRCASECMP
int strcasecmp(char *s1, char *s2);
int strncasecmp(char *s1, char *s2, register int n);
#endif
int strcicmp(char *s1, char *s2);
int strcincmp(char *s1, char *s2, int n);
int strlinkafter(STRLIST *s, STRLIST *i, STRLIST **head, STRLIST **tail);
int strlinkalpha(STRLIST *s, STRLIST **head, STRLIST **tail, int caseindep);
int strlinkbefore(STRLIST *s, STRLIST *i, STRLIST **head, STRLIST **tail);
int strlinkhead(STRLIST *s, STRLIST **head, STRLIST **tail);
int strlinktail(STRLIST *s, STRLIST **head, STRLIST **tail);
int strunlink(STRLIST *s, STRLIST **head, STRLIST **tail);
RETSIGTYPE suspend();
int tclinit(void);
int tclreadicbrc(void);
int tclrestrict(void);
int trapsignals(void);
int uline(USAGE *u);
int usagelinkafter(USAGE *u, USAGE *i, USAGE **first, USAGE **last);
int usagelinkbefore(USAGE *u, USAGE *i, USAGE **first, USAGE **last);
int usagelinkhead(USAGE *u, USAGE **first, USAGE **last);
int usagelinkin(USAGE *u);
int usagelinktail(USAGE *u, USAGE **first, USAGE **last);
int varsanity(void);
int wordcasecmp(char *s1, char *s2);
int wordcmp(char *s1, char *s2);
void c_didpoll(void);
void c_lostcon(void);
void c_packet(char *pkt);
void c_userchar(void);
void gettime(void);
struct server *getserver(void);
struct server *getservbyname(char *name);
void listservers(void);
RETSIGTYPE icbexit();
